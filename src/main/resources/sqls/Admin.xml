<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rainbow.um.model.IAdminDao">

	<!--//웹 대출 조회//-->
	<select id="applySelectList" resultType="ApplyDto">
SELECT USER_NUMBER, USER_EMAIL, BOOK_NAME, ISBN, BOOK_NUMBER,APPLY_CHECK,APPLY_DATE,BOOK_CSEQ FROM USERINFO JOIN
			(SELECT * FROM LOANAPPLY JOIN BOOK USING(BOOK_CSEQ) WHERE APPLY_CHECK='N' )A USING (USER_NUMBER)
	</select>
	
	<update id="applyUpdate" parameterType="String">
	UPDATE LOANAPPLY
SET APPLY_CHECK='Y'
WHERE APPLY_SEQ=#{apply_seq}
	</update>

<select id="lockerLists"  resultType="LockcerDto">
SELECT USER_EMAIL,USER_NUMBER,LOCKER_NUMBER,DATE_FORMAT(LOCK_TIME, '%Y-%c-%e') LOCK_TIME, LOAN_CHECK,DATE_FORMAT(LOCK_LOAN, '%Y-%c-%e') LOCK_LOAN,BOOK_ASEQ,BOOK_NAME FROM
(SELECT USER_EMAIL,LOCKER_NUMBER,USER_NUMBER,BOOK_ASEQ ,LOCK_TIME, LOAN_CHECK ,LOCK_LOAN
FROM LOCKER JOIN USERINFO USING (USER_NUMBER)) A
JOIN
(SELECT BOOK_NAME,BOOK_ASEQ FROM BOOK 
JOIN BOOK_CONDITION USING (BOOK_CSEQ)) B
USING (BOOK_ASEQ)
 ORDER BY LOCK_TIME LIMIT 0,5
	</select>
	
<insert id="lockerInsert" parameterType="LockcerDto">
INSERT INTO LOCKER
(PLACE_SEQ, BOOK_ASEQ, USER_NUMBER, LOCKER_NUMBER, LOCK_TIME, LOAN_CHECK)
VALUES(#{place_seq}, #{book_aseq},#{user_number} , #{locker_number}, NOW(), 'S')
</insert>
	
<update id="lockerUpdate" parameterType="LockcerDto">
UPDATE LOCKER
<if test="loan_check != null">
SET  LOAN_CHECK=#{loan_check}
</if>
<if test="lock_loan != null">
SET  LOCK_LOAN=#{lock_loan}
</if>
WHERE LOCKER_SEQ=#{locker_seq}
</update>

<select id="LockcerSaved" resultType="LockcerDto">
<![CDATA[SELECT BOOK_NAME,LOCKER_NUMBER,
CASE LOAN_CHECK 
WHEN 'S' THEN 'px-3 py-5 bg-gradient-success text-white'
WHEN 'C' THEN 'px-3 py-5 bg-gradient-danger text-white'
ELSE  'px-3 py-5 bg-gradient-primary text-white' END AS LOAN_CHECK
FROM
(SELECT @curRow := @curRow + 1 AS LOCKER_NUMBER
  FROM BOOK INNER JOIN (SELECT @curRow := 0) A
 WHERE @curRow < 12 ORDER BY RAND()) A1
 LEFT JOIN
 (SELECT BOOK_NAME,LOAN_CHECK,LOCKER_NUMBER FROM LOCKER JOIN (SELECT BOOK_NAME,BOOK_ASEQ FROM BOOK 
JOIN BOOK_CONDITION USING (BOOK_CSEQ)) C USING (BOOK_ASEQ)
WHERE LOAN_CHECK !='Y' ) A2
 USING(LOCKER_NUMBER)
 ORDER BY LOCKER_NUMBER]]> 
</select>

	
</mapper>
